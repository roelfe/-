using System;

// 27!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
while (true)
{
    MyProgramm(); //запуск бесконечного цикла что бы программа перезагружалась, всегда надо 
}

// методы 
void MyProgramm()
{

    PrintRed("Новая Программа!!!!");
    PrintGreen("Введите x минимальный"); //использовал зеленный для красоты можно просто 

    double xMin = GetDouble(); // отдельный метод для вычесления числа 

    PrintGreen("Введите x максимальный");

    double xMax = GetDouble();

    PrintGreen("Введите шаг функции ");

    double xStep = GetDouble();

    Myfunction(xMin, xMax, xStep); // отдельный метод для данных



    void Myfunction(double xMin, double xMax, double xStep)
    {
        // проверка на ошибочное написание 
        if (xMin > xMax)
        { 
            PrintRed("x1 мин больше чем x1 макс");
            return; // выход из функции  дострочн
        }
       
        if (xStep == 0)
        {
            PrintRed("равен = 0");
            return;
        }

        if (xStep < 0)
        {
            PrintRed("Шаг меньше нуля");
            return;
        }

        PrintYellow("_____Ответ____");
        // переберем функцию 
        for (double i = xMin; i <= xMax; i += xStep)
        {
            double y = GetValueFunction(i);
            PrintYellow($"x={i}: y={y}"); // Ответ 
        }
        PrintYellow($"Пересечение первой функции с осью Y в точке: {GetValueFunction(0)}");
    }


    double GetValueFunction(double x)
    {
        return Math.Pow(Math.Abs(x), -2*x);
    }
    
    double GetValueFunction2(double x)
    {
        double z = 1+Math.Pow(x, 2);
        return 1 / Math.Sqrt(z);
    }

    void PrintGreen(string message)
    {
        ConsoleColor color = Console.ForegroundColor; // запомнит текущий цвет
        Console.ForegroundColor = ConsoleColor.Green; // поменяем  на  зеленый цвет
        Console.WriteLine(message);  //  выведем  сообщение 
        Console.ForegroundColor = color; // вернем  базовый цвет
    }

    void PrintYellow(string message)
    {
        ConsoleColor color = Console.ForegroundColor;
        Console.ForegroundColor = ConsoleColor.Yellow;
        Console.WriteLine(message);   //выше написанно читай
        Console.ForegroundColor = color;
    }


    void PrintRed(string message)
    {
        ConsoleColor color = Console.ForegroundColor;
        Console.ForegroundColor = ConsoleColor.Red;
        Console.WriteLine(message);  //выше написанно читай
        Console.ForegroundColor = color;
    }



    double GetDouble()
    {
        try
        {
            string temp = Console.ReadLine();
            return Convert.ToDouble(temp);
        }
        catch
        {
            PrintRed("Не верный ввод, введите число");
            return GetDouble();
        }
    }


    void Myfunction2(double xMin2, double xMax2, double xStep2)
    {
        // валидация  входных параметров 
        if (xMin2 > xMax2)
        {
            PrintRed("x1 минимальная больше чем x1 максимальная");
            return; // выход из функции  дострочно
        }

        if (xStep2 == 0)
        {
            PrintRed("Шаг первой функции равен нулю");
            return;
        }

        if (xStep2 < 0)
        {
            PrintRed("Шаг меньше нуля");
            return;
        }
        PrintYellow("_____Ответ____");
        /// переберем функцию 
        for (double i = xMin2; i <= xMax2; i += xStep2)
        {
            double y = GetValueFunction2(i);
            PrintYellow($"x={i}: y={y}"); // Ответ 
        }
        PrintYellow($"Пересечение первой функции с осью Y в точке: {GetValueFunction2(0)}");
    }



    void Myfunction3(double xMin3, double xMax3, double xStep3)
    {
        // валидация  входных параметров 
        if (xMin3 > xMax3)
        {
            PrintRed("x минимальная больше чем x максимальная");
            return; // выход из функции  дострочно
        }

        if (xStep3 == 0)
        {
            PrintRed("Шаг функции равен нулю");
            return;
        }

        if (xStep3 < 0)
        {
            PrintRed("Шаг меньше нуля");
            return;
        }

    }
}
//для меня 
//синус Math.Cos(x);
//корень Math.Sqrt()
//квадрат Math.Pow()
//math.round() для округление если что 
